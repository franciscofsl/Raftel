// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Raftel.Demo.Infrastructure.Data;

#nullable disable

namespace Raftel.Demo.Infrastructure.Data.Migrations
{
    [DbContext(typeof(TestingRaftelDbContext))]
    partial class TestingRaftelDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EatenDevilFruitsByPirates", b =>
                {
                    b.Property<Guid>("DevilFruitId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PirateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DevilFruitId", "PirateId");

                    b.HasIndex("PirateId");

                    b.ToTable("EatenDevilFruitsByPirates");
                });

            modelBuilder.Entity("Raftel.Demo.Domain.Pirates.DevilFruits.DevilFruit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid?>("PirateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("_kind")
                        .HasColumnType("int")
                        .HasColumnName("Kind");

                    b.HasKey("Id");

                    b.HasIndex("PirateId");

                    b.ToTable("DevilFruits");
                });

            modelBuilder.Entity("Raftel.Demo.Domain.Pirates.Pirate", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Bounty")
                        .HasColumnType("bigint")
                        .HasColumnName("Bounty");

                    b.Property<bool>("IsKing")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("_bodyType")
                        .HasColumnType("int")
                        .HasColumnName("BodyType");

                    b.HasKey("Id");

                    b.ToTable("Pirates");
                });

            modelBuilder.Entity("Raftel.Demo.Domain.Ships.Ship", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("EatenDevilFruitsByPirates", b =>
                {
                    b.HasOne("Raftel.Demo.Domain.Pirates.DevilFruits.DevilFruit", null)
                        .WithMany()
                        .HasForeignKey("DevilFruitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Raftel.Demo.Domain.Pirates.Pirate", null)
                        .WithMany()
                        .HasForeignKey("PirateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Raftel.Demo.Domain.Pirates.DevilFruits.DevilFruit", b =>
                {
                    b.HasOne("Raftel.Demo.Domain.Pirates.Pirate", null)
                        .WithMany("EatenDevilFruits")
                        .HasForeignKey("PirateId");
                });

            modelBuilder.Entity("Raftel.Demo.Domain.Pirates.Pirate", b =>
                {
                    b.Navigation("EatenDevilFruits");
                });
#pragma warning restore 612, 618
        }
    }
}
