### YamlMime:ManagedReference
items:
- uid: Raftel.Application.Abstractions.IRequestHandler`2
  commentId: T:Raftel.Application.Abstractions.IRequestHandler`2
  id: IRequestHandler`2
  parent: Raftel.Application.Abstractions
  children:
  - Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync(`0)
  langs:
  - csharp
  - vb
  name: IRequestHandler<TRequest, TResponse>
  nameWithType: IRequestHandler<TRequest, TResponse>
  fullName: Raftel.Application.Abstractions.IRequestHandler<TRequest, TResponse>
  type: Interface
  source:
    remote:
      path: src/Raftel.Application/Abstractions/IRequestHandler.cs
      branch: feature/base-types
      repo: https://github.com/franciscofsl/Raftel
    id: IRequestHandler
    path: src/Raftel.Application/Abstractions/IRequestHandler.cs
    startLine: 8
  assemblies:
  - Raftel.Application
  namespace: Raftel.Application.Abstractions
  summary: >-
    Defines a handler that processes a request of type <code class="typeparamref">TRequest</code>

    and returns a response of type <code class="typeparamref">TResponse</code>.
  example: []
  syntax:
    content: 'public interface IRequestHandler<TRequest, TResponse> where TRequest : IRequest<TResponse>'
    typeParameters:
    - id: TRequest
      description: The type of the request.
    - id: TResponse
      description: The type of the response.
    content.vb: Public Interface IRequestHandler(Of TRequest As IRequest(Of TResponse), TResponse)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
  fullName.vb: Raftel.Application.Abstractions.IRequestHandler(Of TRequest, TResponse)
  name.vb: IRequestHandler(Of TRequest, TResponse)
- uid: Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync(`0)
  commentId: M:Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync(`0)
  id: HandleAsync(`0)
  parent: Raftel.Application.Abstractions.IRequestHandler`2
  langs:
  - csharp
  - vb
  name: HandleAsync(TRequest)
  nameWithType: IRequestHandler<TRequest, TResponse>.HandleAsync(TRequest)
  fullName: Raftel.Application.Abstractions.IRequestHandler<TRequest, TResponse>.HandleAsync(TRequest)
  type: Method
  source:
    remote:
      path: src/Raftel.Application/Abstractions/IRequestHandler.cs
      branch: feature/base-types
      repo: https://github.com/franciscofsl/Raftel
    id: HandleAsync
    path: src/Raftel.Application/Abstractions/IRequestHandler.cs
    startLine: 16
  assemblies:
  - Raftel.Application
  namespace: Raftel.Application.Abstractions
  summary: Handles the given request asynchronously.
  example: []
  syntax:
    content: Task<TResponse> HandleAsync(TRequest request)
    parameters:
    - id: request
      type: '{TRequest}'
      description: The request to process.
    return:
      type: System.Threading.Tasks.Task{{TResponse}}
      description: A task representing the asynchronous operation, containing the response.
    content.vb: Function HandleAsync(request As TRequest) As Task(Of TResponse)
  overload: Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync*
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).HandleAsync(TRequest)
  fullName.vb: Raftel.Application.Abstractions.IRequestHandler(Of TRequest, TResponse).HandleAsync(TRequest)
references:
- uid: Raftel.Application.Abstractions
  commentId: N:Raftel.Application.Abstractions
  href: Raftel.html
  name: Raftel.Application.Abstractions
  nameWithType: Raftel.Application.Abstractions
  fullName: Raftel.Application.Abstractions
  spec.csharp:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Application
    name: Application
    href: Raftel.Application.html
  - name: .
  - uid: Raftel.Application.Abstractions
    name: Abstractions
    href: Raftel.Application.Abstractions.html
  spec.vb:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Application
    name: Application
    href: Raftel.Application.html
  - name: .
  - uid: Raftel.Application.Abstractions
    name: Abstractions
    href: Raftel.Application.Abstractions.html
- uid: Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync*
  commentId: Overload:Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync
  href: Raftel.Application.Abstractions.IRequestHandler-2.html#Raftel_Application_Abstractions_IRequestHandler_2_HandleAsync__0_
  name: HandleAsync
  nameWithType: IRequestHandler<TRequest, TResponse>.HandleAsync
  fullName: Raftel.Application.Abstractions.IRequestHandler<TRequest, TResponse>.HandleAsync
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).HandleAsync
  fullName.vb: Raftel.Application.Abstractions.IRequestHandler(Of TRequest, TResponse).HandleAsync
- uid: '{TRequest}'
  commentId: '!:TRequest'
  definition: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading.Tasks.Task{{TResponse}}
  commentId: T:System.Threading.Tasks.Task{``1}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResponse>
  nameWithType: Task<TResponse>
  fullName: System.Threading.Tasks.Task<TResponse>
  nameWithType.vb: Task(Of TResponse)
  fullName.vb: System.Threading.Tasks.Task(Of TResponse)
  name.vb: Task(Of TResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResponse
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResponse
  - name: )
- uid: TRequest
  name: TRequest
  nameWithType: TRequest
  fullName: TRequest
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
