### YamlMime:ManagedReference
items:
- uid: Raftel.Domain.BaseTypes.TypedId`1
  commentId: T:Raftel.Domain.BaseTypes.TypedId`1
  id: TypedId`1
  parent: Raftel.Domain.BaseTypes
  children:
  - Raftel.Domain.BaseTypes.TypedId`1.#ctor(`0)
  - Raftel.Domain.BaseTypes.TypedId`1.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
  - Raftel.Domain.BaseTypes.TypedId`1.GetHashCode
  - Raftel.Domain.BaseTypes.TypedId`1.ToString
  - Raftel.Domain.BaseTypes.TypedId`1.op_Implicit(Raftel.Domain.BaseTypes.TypedId{`0})~`0
  langs:
  - csharp
  - vb
  name: TypedId<T>
  nameWithType: TypedId<T>
  fullName: Raftel.Domain.BaseTypes.TypedId<T>
  type: Class
  source:
    remote:
      path: src/Raftel.Domain/BaseTypes/TypedId.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: TypedId
    path: src/Raftel.Domain/BaseTypes/TypedId.cs
    startLine: 6
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.BaseTypes
  summary: Represents a strongly-typed identifier based on a primitive type.
  example: []
  syntax:
    content: 'public abstract record TypedId<T> : IEquatable<TypedId<T>> where T : notnull'
    typeParameters:
    - id: T
      description: The underlying primitive type (e.g., Guid, int).
    content.vb: Public MustInherit Class TypedId(Of T) Implements IEquatable(Of TypedId(Of T))
  inheritance:
  - System.Object
  derivedClasses:
  - Raftel.Domain.BaseTypes.TypedGuidId
  implements:
  - System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: TypedId(Of T)
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T)
  name.vb: TypedId(Of T)
- uid: Raftel.Domain.BaseTypes.TypedId`1.#ctor(`0)
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: Raftel.Domain.BaseTypes.TypedId`1
  langs:
  - csharp
  - vb
  name: TypedId(T)
  nameWithType: TypedId<T>.TypedId(T)
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.TypedId(T)
  type: Constructor
  source:
    remote:
      path: src/Raftel.Domain/BaseTypes/TypedId.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: .ctor
    path: src/Raftel.Domain/BaseTypes/TypedId.cs
    startLine: 16
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.BaseTypes
  summary: Initializes a new instance of the <xref href="Raftel.Domain.BaseTypes.TypedId%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected TypedId(T value)
    parameters:
    - id: value
      type: '{T}'
      description: The raw value of the identifier.
    content.vb: Protected Sub New(value As T)
  overload: Raftel.Domain.BaseTypes.TypedId`1.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when value is null.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when value is Guid.Empty.
  nameWithType.vb: TypedId(Of T).New(T)
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).New(T)
  name.vb: New(T)
- uid: Raftel.Domain.BaseTypes.TypedId`1.ToString
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.ToString
  id: ToString
  parent: Raftel.Domain.BaseTypes.TypedId`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TypedId<T>.ToString()
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.ToString()
  type: Method
  source:
    remote:
      path: src/Raftel.Domain/BaseTypes/TypedId.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: ToString
    path: src/Raftel.Domain/BaseTypes/TypedId.cs
    startLine: 28
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.BaseTypes
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string? ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Raftel.Domain.BaseTypes.TypedId`1.ToString*
  nameWithType.vb: TypedId(Of T).ToString()
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).ToString()
- uid: Raftel.Domain.BaseTypes.TypedId`1.op_Implicit(Raftel.Domain.BaseTypes.TypedId{`0})~`0
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.op_Implicit(Raftel.Domain.BaseTypes.TypedId{`0})~`0
  id: op_Implicit(Raftel.Domain.BaseTypes.TypedId{`0})~`0
  parent: Raftel.Domain.BaseTypes.TypedId`1
  langs:
  - csharp
  - vb
  name: implicit operator T(TypedId<T>)
  nameWithType: TypedId<T>.implicit operator T(TypedId<T>)
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.implicit operator T(Raftel.Domain.BaseTypes.TypedId<T>)
  type: Operator
  source:
    remote:
      path: src/Raftel.Domain/BaseTypes/TypedId.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: op_Implicit
    path: src/Raftel.Domain/BaseTypes/TypedId.cs
    startLine: 33
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.BaseTypes
  summary: Implicitly converts a <xref href="Raftel.Domain.BaseTypes.TypedId%601" data-throw-if-not-resolved="false"></xref> to its underlying value.
  example: []
  syntax:
    content: public static implicit operator T(TypedId<T> id)
    parameters:
    - id: id
      type: Raftel.Domain.BaseTypes.TypedId`1
    return:
      type: '{T}'
    content.vb: Public Shared Widening Operator CType(id As TypedId(Of T)) As T
  overload: Raftel.Domain.BaseTypes.TypedId`1.op_Implicit*
  nameWithType.vb: TypedId(Of T).CType(TypedId(Of T))
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).CType(Raftel.Domain.BaseTypes.TypedId(Of T))
  name.vb: CType(TypedId(Of T))
- uid: Raftel.Domain.BaseTypes.TypedId`1.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
  id: Equals(Raftel.Domain.BaseTypes.TypedId{`0})
  parent: Raftel.Domain.BaseTypes.TypedId`1
  langs:
  - csharp
  - vb
  name: Equals(TypedId<T>?)
  nameWithType: TypedId<T>.Equals(TypedId<T>?)
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.Equals(Raftel.Domain.BaseTypes.TypedId<T>?)
  type: Method
  source:
    remote:
      path: src/Raftel.Domain/BaseTypes/TypedId.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: Equals
    path: src/Raftel.Domain/BaseTypes/TypedId.cs
    startLine: 36
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.BaseTypes
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public virtual bool Equals(TypedId<T>? other)
    parameters:
    - id: other
      type: Raftel.Domain.BaseTypes.TypedId`1
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overridable Function Equals(other As TypedId(Of T)) As Boolean
  overload: Raftel.Domain.BaseTypes.TypedId`1.Equals*
  implements:
  - System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}.Equals(Raftel.Domain.BaseTypes.TypedId{{T}})
  nameWithType.vb: TypedId(Of T).Equals(TypedId(Of T))
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).Equals(Raftel.Domain.BaseTypes.TypedId(Of T))
  name.vb: Equals(TypedId(Of T))
- uid: Raftel.Domain.BaseTypes.TypedId`1.GetHashCode
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.GetHashCode
  id: GetHashCode
  parent: Raftel.Domain.BaseTypes.TypedId`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TypedId<T>.GetHashCode()
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Raftel.Domain/BaseTypes/TypedId.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: GetHashCode
    path: src/Raftel.Domain/BaseTypes/TypedId.cs
    startLine: 43
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.BaseTypes
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Raftel.Domain.BaseTypes.TypedId`1.GetHashCode*
  nameWithType.vb: TypedId(Of T).GetHashCode()
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).GetHashCode()
references:
- uid: Raftel.Domain.BaseTypes
  commentId: N:Raftel.Domain.BaseTypes
  href: Raftel.html
  name: Raftel.Domain.BaseTypes
  nameWithType: Raftel.Domain.BaseTypes
  fullName: Raftel.Domain.BaseTypes
  spec.csharp:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Domain
    name: Domain
    href: Raftel.Domain.html
  - name: .
  - uid: Raftel.Domain.BaseTypes
    name: BaseTypes
    href: Raftel.Domain.BaseTypes.html
  spec.vb:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Domain
    name: Domain
    href: Raftel.Domain.html
  - name: .
  - uid: Raftel.Domain.BaseTypes
    name: BaseTypes
    href: Raftel.Domain.BaseTypes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}
  commentId: T:System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TypedId<T>>
  nameWithType: IEquatable<TypedId<T>>
  fullName: System.IEquatable<Raftel.Domain.BaseTypes.TypedId<T>>
  nameWithType.vb: IEquatable(Of TypedId(Of T))
  fullName.vb: System.IEquatable(Of Raftel.Domain.BaseTypes.TypedId(Of T))
  name.vb: IEquatable(Of TypedId(Of T))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Raftel.Domain.BaseTypes.TypedId`1
    name: TypedId
    href: Raftel.Domain.BaseTypes.TypedId-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Raftel.Domain.BaseTypes.TypedId`1
    name: TypedId
    href: Raftel.Domain.BaseTypes.TypedId-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Raftel.Domain.BaseTypes.TypedId`1
  commentId: T:Raftel.Domain.BaseTypes.TypedId`1
  parent: Raftel.Domain.BaseTypes
  href: Raftel.Domain.BaseTypes.TypedId-1.html
  name: TypedId<T>
  nameWithType: TypedId<T>
  fullName: Raftel.Domain.BaseTypes.TypedId<T>
  nameWithType.vb: TypedId(Of T)
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T)
  name.vb: TypedId(Of T)
  spec.csharp:
  - uid: Raftel.Domain.BaseTypes.TypedId`1
    name: TypedId
    href: Raftel.Domain.BaseTypes.TypedId-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Raftel.Domain.BaseTypes.TypedId`1
    name: TypedId
    href: Raftel.Domain.BaseTypes.TypedId-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Raftel.Domain.BaseTypes.TypedId`1.#ctor*
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.#ctor
  href: Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1__ctor__0_
  name: TypedId
  nameWithType: TypedId<T>.TypedId
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.TypedId
  nameWithType.vb: TypedId(Of T).New
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Raftel.Domain.BaseTypes.TypedId`1.ToString*
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.ToString
  href: Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_ToString
  name: ToString
  nameWithType: TypedId<T>.ToString
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.ToString
  nameWithType.vb: TypedId(Of T).ToString
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Raftel.Domain.BaseTypes.TypedId`1.op_Implicit*
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.op_Implicit
  name: implicit operator
  nameWithType: TypedId<T>.implicit operator
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.implicit operator
  nameWithType.vb: TypedId(Of T).CType
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Raftel.Domain.BaseTypes.TypedId`1.Equals*
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.Equals
  href: Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_Equals_Raftel_Domain_BaseTypes_TypedId__0__
  name: Equals
  nameWithType: TypedId<T>.Equals
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.Equals
  nameWithType.vb: TypedId(Of T).Equals
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).Equals
- uid: System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}.Equals(Raftel.Domain.BaseTypes.TypedId{{T}})
  commentId: M:System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
  parent: System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(TypedId<T>)
  nameWithType: IEquatable<TypedId<T>>.Equals(TypedId<T>)
  fullName: System.IEquatable<Raftel.Domain.BaseTypes.TypedId<T>>.Equals(Raftel.Domain.BaseTypes.TypedId<T>)
  nameWithType.vb: IEquatable(Of TypedId(Of T)).Equals(TypedId(Of T))
  fullName.vb: System.IEquatable(Of Raftel.Domain.BaseTypes.TypedId(Of T)).Equals(Raftel.Domain.BaseTypes.TypedId(Of T))
  name.vb: Equals(TypedId(Of T))
  spec.csharp:
  - uid: System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Raftel.Domain.BaseTypes.TypedId`1
    name: TypedId
    href: Raftel.Domain.BaseTypes.TypedId-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IEquatable{Raftel.Domain.BaseTypes.TypedId`1}.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Raftel.Domain.BaseTypes.TypedId`1
    name: TypedId
    href: Raftel.Domain.BaseTypes.TypedId-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Raftel.Domain.BaseTypes.TypedId`1.GetHashCode*
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.GetHashCode
  href: Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_GetHashCode
  name: GetHashCode
  nameWithType: TypedId<T>.GetHashCode
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.GetHashCode
  nameWithType.vb: TypedId(Of T).GetHashCode
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
