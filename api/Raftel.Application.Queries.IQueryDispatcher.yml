### YamlMime:ManagedReference
items:
- uid: Raftel.Application.Queries.IQueryDispatcher
  commentId: T:Raftel.Application.Queries.IQueryDispatcher
  id: IQueryDispatcher
  parent: Raftel.Application.Queries
  children:
  - Raftel.Application.Queries.IQueryDispatcher.DispatchAsync``2(``0)
  langs:
  - csharp
  - vb
  name: IQueryDispatcher
  nameWithType: IQueryDispatcher
  fullName: Raftel.Application.Queries.IQueryDispatcher
  type: Interface
  source:
    remote:
      path: src/Raftel.Application/Queries/IQueryDispatcher.cs
      branch: feature/base-types
      repo: https://github.com/franciscofsl/Raftel
    id: IQueryDispatcher
    path: src/Raftel.Application/Queries/IQueryDispatcher.cs
    startLine: 7
  assemblies:
  - Raftel.Application
  namespace: Raftel.Application.Queries
  summary: Dispatches a query to its corresponding handler and returns the result.
  example: []
  syntax:
    content: public interface IQueryDispatcher
    content.vb: Public Interface IQueryDispatcher
- uid: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync``2(``0)
  commentId: M:Raftel.Application.Queries.IQueryDispatcher.DispatchAsync``2(``0)
  id: DispatchAsync``2(``0)
  parent: Raftel.Application.Queries.IQueryDispatcher
  langs:
  - csharp
  - vb
  name: DispatchAsync<TQuery, TResult>(TQuery)
  nameWithType: IQueryDispatcher.DispatchAsync<TQuery, TResult>(TQuery)
  fullName: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync<TQuery, TResult>(TQuery)
  type: Method
  source:
    remote:
      path: src/Raftel.Application/Queries/IQueryDispatcher.cs
      branch: feature/base-types
      repo: https://github.com/franciscofsl/Raftel
    id: DispatchAsync
    path: src/Raftel.Application/Queries/IQueryDispatcher.cs
    startLine: 16
  assemblies:
  - Raftel.Application
  namespace: Raftel.Application.Queries
  summary: Dispatches a query asynchronously and retrieves the result.
  example: []
  syntax:
    content: 'Task<Result<TResult>> DispatchAsync<TQuery, TResult>(TQuery query) where TQuery : IQuery<TResult>'
    parameters:
    - id: query
      type: '{TQuery}'
      description: The query instance to process.
    typeParameters:
    - id: TQuery
      description: The type of the query to dispatch.
    - id: TResult
      description: The type of the result expected from the query.
    return:
      type: System.Threading.Tasks.Task{Raftel.Domain.Abstractions.Result{{TResult}}}
      description: A <xref href="Raftel.Domain.Abstractions.Result%601" data-throw-if-not-resolved="false"></xref> representing the outcome of the query execution.
    content.vb: Function DispatchAsync(Of TQuery As IQuery(Of TResult), TResult)(query As TQuery) As Task(Of Result(Of TResult))
  overload: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync*
  nameWithType.vb: IQueryDispatcher.DispatchAsync(Of TQuery, TResult)(TQuery)
  fullName.vb: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync(Of TQuery, TResult)(TQuery)
  name.vb: DispatchAsync(Of TQuery, TResult)(TQuery)
references:
- uid: Raftel.Application.Queries
  commentId: N:Raftel.Application.Queries
  href: Raftel.html
  name: Raftel.Application.Queries
  nameWithType: Raftel.Application.Queries
  fullName: Raftel.Application.Queries
  spec.csharp:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Application
    name: Application
    href: Raftel.Application.html
  - name: .
  - uid: Raftel.Application.Queries
    name: Queries
    href: Raftel.Application.Queries.html
  spec.vb:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Application
    name: Application
    href: Raftel.Application.html
  - name: .
  - uid: Raftel.Application.Queries
    name: Queries
    href: Raftel.Application.Queries.html
- uid: Raftel.Domain.Abstractions.Result`1
  commentId: T:Raftel.Domain.Abstractions.Result`1
  parent: Raftel.Domain.Abstractions
  href: Raftel.Domain.Abstractions.Result-1.html
  name: Result<TValue>
  nameWithType: Result<TValue>
  fullName: Raftel.Domain.Abstractions.Result<TValue>
  nameWithType.vb: Result(Of TValue)
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue)
  name.vb: Result(Of TValue)
  spec.csharp:
  - uid: Raftel.Domain.Abstractions.Result`1
    name: Result
    href: Raftel.Domain.Abstractions.Result-1.html
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Raftel.Domain.Abstractions.Result`1
    name: Result
    href: Raftel.Domain.Abstractions.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync*
  commentId: Overload:Raftel.Application.Queries.IQueryDispatcher.DispatchAsync
  href: Raftel.Application.Queries.IQueryDispatcher.html#Raftel_Application_Queries_IQueryDispatcher_DispatchAsync__2___0_
  name: DispatchAsync
  nameWithType: IQueryDispatcher.DispatchAsync
  fullName: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync
- uid: '{TQuery}'
  commentId: '!:TQuery'
  definition: TQuery
  name: TQuery
  nameWithType: TQuery
  fullName: TQuery
- uid: System.Threading.Tasks.Task{Raftel.Domain.Abstractions.Result{{TResult}}}
  commentId: T:System.Threading.Tasks.Task{Raftel.Domain.Abstractions.Result{``1}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<TResult>>
  nameWithType: Task<Result<TResult>>
  fullName: System.Threading.Tasks.Task<Raftel.Domain.Abstractions.Result<TResult>>
  nameWithType.vb: Task(Of Result(Of TResult))
  fullName.vb: System.Threading.Tasks.Task(Of Raftel.Domain.Abstractions.Result(Of TResult))
  name.vb: Task(Of Result(Of TResult))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Raftel.Domain.Abstractions.Result`1
    name: Result
    href: Raftel.Domain.Abstractions.Result-1.html
  - name: <
  - name: TResult
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Raftel.Domain.Abstractions.Result`1
    name: Result
    href: Raftel.Domain.Abstractions.Result-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
  - name: )
- uid: Raftel.Domain.Abstractions
  commentId: N:Raftel.Domain.Abstractions
  href: Raftel.html
  name: Raftel.Domain.Abstractions
  nameWithType: Raftel.Domain.Abstractions
  fullName: Raftel.Domain.Abstractions
  spec.csharp:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Domain
    name: Domain
    href: Raftel.Domain.html
  - name: .
  - uid: Raftel.Domain.Abstractions
    name: Abstractions
    href: Raftel.Domain.Abstractions.html
  spec.vb:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Domain
    name: Domain
    href: Raftel.Domain.html
  - name: .
  - uid: Raftel.Domain.Abstractions
    name: Abstractions
    href: Raftel.Domain.Abstractions.html
- uid: TQuery
  name: TQuery
  nameWithType: TQuery
  fullName: TQuery
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
