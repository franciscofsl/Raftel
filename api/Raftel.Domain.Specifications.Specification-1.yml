### YamlMime:ManagedReference
items:
- uid: Raftel.Domain.Specifications.Specification`1
  commentId: T:Raftel.Domain.Specifications.Specification`1
  id: Specification`1
  parent: Raftel.Domain.Specifications
  children:
  - Raftel.Domain.Specifications.Specification`1.And(Raftel.Domain.Specifications.Specification{`0})
  - Raftel.Domain.Specifications.Specification`1.IsSatisfiedBy(`0)
  - Raftel.Domain.Specifications.Specification`1.Or(Raftel.Domain.Specifications.Specification{`0})
  - Raftel.Domain.Specifications.Specification`1.ToExpression
  langs:
  - csharp
  - vb
  name: Specification<TModel>
  nameWithType: Specification<TModel>
  fullName: Raftel.Domain.Specifications.Specification<TModel>
  type: Class
  source:
    remote:
      path: src/Raftel.Domain/Specifications/Specification.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: Specification
    path: src/Raftel.Domain/Specifications/Specification.cs
    startLine: 8
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.Specifications
  summary: Represents a base class for specifications that defines a condition for a given model.
  example: []
  syntax:
    content: public abstract class Specification<TModel>
    typeParameters:
    - id: TModel
      description: The type of the model to which the specification is applied.
    content.vb: Public MustInherit Class Specification(Of TModel)
  inheritance:
  - System.Object
  derivedClasses:
  - Raftel.Domain.Specifications.AndSpecification`1
  - Raftel.Domain.Specifications.OrSpecification`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Specification(Of TModel)
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel)
  name.vb: Specification(Of TModel)
- uid: Raftel.Domain.Specifications.Specification`1.ToExpression
  commentId: M:Raftel.Domain.Specifications.Specification`1.ToExpression
  id: ToExpression
  parent: Raftel.Domain.Specifications.Specification`1
  langs:
  - csharp
  - vb
  name: ToExpression()
  nameWithType: Specification<TModel>.ToExpression()
  fullName: Raftel.Domain.Specifications.Specification<TModel>.ToExpression()
  type: Method
  source:
    remote:
      path: src/Raftel.Domain/Specifications/Specification.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: ToExpression
    path: src/Raftel.Domain/Specifications/Specification.cs
    startLine: 14
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.Specifications
  summary: Converts the specification to an expression that can be evaluated against a model.
  example: []
  syntax:
    content: public abstract Expression<Func<TModel, bool>> ToExpression()
    return:
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Boolean}}
      description: An expression that represents the condition.
    content.vb: Public MustOverride Function ToExpression() As Expression(Of Func(Of TModel, Boolean))
  overload: Raftel.Domain.Specifications.Specification`1.ToExpression*
  nameWithType.vb: Specification(Of TModel).ToExpression()
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).ToExpression()
- uid: Raftel.Domain.Specifications.Specification`1.IsSatisfiedBy(`0)
  commentId: M:Raftel.Domain.Specifications.Specification`1.IsSatisfiedBy(`0)
  id: IsSatisfiedBy(`0)
  parent: Raftel.Domain.Specifications.Specification`1
  langs:
  - csharp
  - vb
  name: IsSatisfiedBy(TModel)
  nameWithType: Specification<TModel>.IsSatisfiedBy(TModel)
  fullName: Raftel.Domain.Specifications.Specification<TModel>.IsSatisfiedBy(TModel)
  type: Method
  source:
    remote:
      path: src/Raftel.Domain/Specifications/Specification.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: IsSatisfiedBy
    path: src/Raftel.Domain/Specifications/Specification.cs
    startLine: 21
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.Specifications
  summary: Determines whether the model satisfies the specification.
  example: []
  syntax:
    content: public bool IsSatisfiedBy(TModel model)
    parameters:
    - id: model
      type: '{TModel}'
      description: The model to evaluate.
    return:
      type: System.Boolean
      description: True if the model satisfies the specification, otherwise false.
    content.vb: Public Function IsSatisfiedBy(model As TModel) As Boolean
  overload: Raftel.Domain.Specifications.Specification`1.IsSatisfiedBy*
  nameWithType.vb: Specification(Of TModel).IsSatisfiedBy(TModel)
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).IsSatisfiedBy(TModel)
- uid: Raftel.Domain.Specifications.Specification`1.And(Raftel.Domain.Specifications.Specification{`0})
  commentId: M:Raftel.Domain.Specifications.Specification`1.And(Raftel.Domain.Specifications.Specification{`0})
  id: And(Raftel.Domain.Specifications.Specification{`0})
  parent: Raftel.Domain.Specifications.Specification`1
  langs:
  - csharp
  - vb
  name: And(Specification<TModel>)
  nameWithType: Specification<TModel>.And(Specification<TModel>)
  fullName: Raftel.Domain.Specifications.Specification<TModel>.And(Raftel.Domain.Specifications.Specification<TModel>)
  type: Method
  source:
    remote:
      path: src/Raftel.Domain/Specifications/Specification.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: And
    path: src/Raftel.Domain/Specifications/Specification.cs
    startLine: 33
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.Specifications
  summary: Combines the current specification with another specification using a logical AND.
  example: []
  syntax:
    content: public Specification<TModel> And(Specification<TModel> other)
    parameters:
    - id: other
      type: Raftel.Domain.Specifications.Specification`1
      description: The specification to combine with.
    return:
      type: Raftel.Domain.Specifications.Specification`1
      description: A new specification that represents the logical AND.
    content.vb: Public Function [And](other As Specification(Of TModel)) As Specification(Of TModel)
  overload: Raftel.Domain.Specifications.Specification`1.And*
  nameWithType.vb: Specification(Of TModel).And(Specification(Of TModel))
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).And(Raftel.Domain.Specifications.Specification(Of TModel))
  name.vb: And(Specification(Of TModel))
- uid: Raftel.Domain.Specifications.Specification`1.Or(Raftel.Domain.Specifications.Specification{`0})
  commentId: M:Raftel.Domain.Specifications.Specification`1.Or(Raftel.Domain.Specifications.Specification{`0})
  id: Or(Raftel.Domain.Specifications.Specification{`0})
  parent: Raftel.Domain.Specifications.Specification`1
  langs:
  - csharp
  - vb
  name: Or(Specification<TModel>)
  nameWithType: Specification<TModel>.Or(Specification<TModel>)
  fullName: Raftel.Domain.Specifications.Specification<TModel>.Or(Raftel.Domain.Specifications.Specification<TModel>)
  type: Method
  source:
    remote:
      path: src/Raftel.Domain/Specifications/Specification.cs
      branch: feature/docs
      repo: https://github.com/franciscofsl/Raftel
    id: Or
    path: src/Raftel.Domain/Specifications/Specification.cs
    startLine: 43
  assemblies:
  - Raftel.Domain
  namespace: Raftel.Domain.Specifications
  summary: Combines the current specification with another specification using a logical OR.
  example: []
  syntax:
    content: public Specification<TModel> Or(Specification<TModel> other)
    parameters:
    - id: other
      type: Raftel.Domain.Specifications.Specification`1
      description: The specification to combine with.
    return:
      type: Raftel.Domain.Specifications.Specification`1
      description: A new specification that represents the logical OR.
    content.vb: Public Function [Or](other As Specification(Of TModel)) As Specification(Of TModel)
  overload: Raftel.Domain.Specifications.Specification`1.Or*
  nameWithType.vb: Specification(Of TModel).Or(Specification(Of TModel))
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).Or(Raftel.Domain.Specifications.Specification(Of TModel))
  name.vb: Or(Specification(Of TModel))
references:
- uid: Raftel.Domain.Specifications
  commentId: N:Raftel.Domain.Specifications
  href: Raftel.html
  name: Raftel.Domain.Specifications
  nameWithType: Raftel.Domain.Specifications
  fullName: Raftel.Domain.Specifications
  spec.csharp:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Domain
    name: Domain
    href: Raftel.Domain.html
  - name: .
  - uid: Raftel.Domain.Specifications
    name: Specifications
    href: Raftel.Domain.Specifications.html
  spec.vb:
  - uid: Raftel
    name: Raftel
    href: Raftel.html
  - name: .
  - uid: Raftel.Domain
    name: Domain
    href: Raftel.Domain.html
  - name: .
  - uid: Raftel.Domain.Specifications
    name: Specifications
    href: Raftel.Domain.Specifications.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Raftel.Domain.Specifications.Specification`1.ToExpression*
  commentId: Overload:Raftel.Domain.Specifications.Specification`1.ToExpression
  href: Raftel.Domain.Specifications.Specification-1.html#Raftel_Domain_Specifications_Specification_1_ToExpression
  name: ToExpression
  nameWithType: Specification<TModel>.ToExpression
  fullName: Raftel.Domain.Specifications.Specification<TModel>.ToExpression
  nameWithType.vb: Specification(Of TModel).ToExpression
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).ToExpression
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<TModel, bool>>
  nameWithType: Expression<Func<TModel, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, bool>>
  nameWithType.vb: Expression(Of Func(Of TModel, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, Boolean))
  name.vb: Expression(Of Func(Of TModel, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Raftel.Domain.Specifications.Specification`1.IsSatisfiedBy*
  commentId: Overload:Raftel.Domain.Specifications.Specification`1.IsSatisfiedBy
  href: Raftel.Domain.Specifications.Specification-1.html#Raftel_Domain_Specifications_Specification_1_IsSatisfiedBy__0_
  name: IsSatisfiedBy
  nameWithType: Specification<TModel>.IsSatisfiedBy
  fullName: Raftel.Domain.Specifications.Specification<TModel>.IsSatisfiedBy
  nameWithType.vb: Specification(Of TModel).IsSatisfiedBy
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).IsSatisfiedBy
- uid: '{TModel}'
  commentId: '!:TModel'
  definition: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TModel
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: Raftel.Domain.Specifications.Specification`1.And*
  commentId: Overload:Raftel.Domain.Specifications.Specification`1.And
  href: Raftel.Domain.Specifications.Specification-1.html#Raftel_Domain_Specifications_Specification_1_And_Raftel_Domain_Specifications_Specification__0__
  name: And
  nameWithType: Specification<TModel>.And
  fullName: Raftel.Domain.Specifications.Specification<TModel>.And
  nameWithType.vb: Specification(Of TModel).And
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).And
- uid: Raftel.Domain.Specifications.Specification`1
  commentId: T:Raftel.Domain.Specifications.Specification`1
  parent: Raftel.Domain.Specifications
  href: Raftel.Domain.Specifications.Specification-1.html
  name: Specification<TModel>
  nameWithType: Specification<TModel>
  fullName: Raftel.Domain.Specifications.Specification<TModel>
  nameWithType.vb: Specification(Of TModel)
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel)
  name.vb: Specification(Of TModel)
  spec.csharp:
  - uid: Raftel.Domain.Specifications.Specification`1
    name: Specification
    href: Raftel.Domain.Specifications.Specification-1.html
  - name: <
  - name: TModel
  - name: '>'
  spec.vb:
  - uid: Raftel.Domain.Specifications.Specification`1
    name: Specification
    href: Raftel.Domain.Specifications.Specification-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TModel
  - name: )
- uid: Raftel.Domain.Specifications.Specification`1.Or*
  commentId: Overload:Raftel.Domain.Specifications.Specification`1.Or
  href: Raftel.Domain.Specifications.Specification-1.html#Raftel_Domain_Specifications_Specification_1_Or_Raftel_Domain_Specifications_Specification__0__
  name: Or
  nameWithType: Specification<TModel>.Or
  fullName: Raftel.Domain.Specifications.Specification<TModel>.Or
  nameWithType.vb: Specification(Of TModel).Or
  fullName.vb: Raftel.Domain.Specifications.Specification(Of TModel).Or
