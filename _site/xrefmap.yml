### YamlMime:XRefMap
sorted: true
references:
- uid: Raftel.Application.Abstractions
  name: Raftel.Application.Abstractions
  href: api/Raftel.Application.Abstractions.html
  commentId: N:Raftel.Application.Abstractions
  fullName: Raftel.Application.Abstractions
  nameWithType: Raftel.Application.Abstractions
- uid: Raftel.Application.Abstractions.IRequestDispatcher
  name: IRequestDispatcher
  href: api/Raftel.Application.Abstractions.IRequestDispatcher.html
  commentId: T:Raftel.Application.Abstractions.IRequestDispatcher
  fullName: Raftel.Application.Abstractions.IRequestDispatcher
  nameWithType: IRequestDispatcher
- uid: Raftel.Application.Abstractions.IRequestDispatcher.DispatchAsync*
  name: DispatchAsync
  href: api/Raftel.Application.Abstractions.IRequestDispatcher.html#Raftel_Application_Abstractions_IRequestDispatcher_DispatchAsync_
  commentId: Overload:Raftel.Application.Abstractions.IRequestDispatcher.DispatchAsync
  isSpec: "True"
  fullName: Raftel.Application.Abstractions.IRequestDispatcher.DispatchAsync
  nameWithType: IRequestDispatcher.DispatchAsync
- uid: Raftel.Application.Abstractions.IRequestDispatcher.DispatchAsync``2(``0)
  name: DispatchAsync<TRequest, TResponse>(TRequest)
  href: api/Raftel.Application.Abstractions.IRequestDispatcher.html#Raftel_Application_Abstractions_IRequestDispatcher_DispatchAsync__2___0_
  commentId: M:Raftel.Application.Abstractions.IRequestDispatcher.DispatchAsync``2(``0)
  name.vb: DispatchAsync(Of TRequest, TResponse)(TRequest)
  fullName: Raftel.Application.Abstractions.IRequestDispatcher.DispatchAsync<TRequest, TResponse>(TRequest)
  fullName.vb: Raftel.Application.Abstractions.IRequestDispatcher.DispatchAsync(Of TRequest, TResponse)(TRequest)
  nameWithType: IRequestDispatcher.DispatchAsync<TRequest, TResponse>(TRequest)
  nameWithType.vb: IRequestDispatcher.DispatchAsync(Of TRequest, TResponse)(TRequest)
- uid: Raftel.Application.Abstractions.IRequestHandler`2
  name: IRequestHandler<TRequest, TResponse>
  href: api/Raftel.Application.Abstractions.IRequestHandler-2.html
  commentId: T:Raftel.Application.Abstractions.IRequestHandler`2
  name.vb: IRequestHandler(Of TRequest, TResponse)
  fullName: Raftel.Application.Abstractions.IRequestHandler<TRequest, TResponse>
  fullName.vb: Raftel.Application.Abstractions.IRequestHandler(Of TRequest, TResponse)
  nameWithType: IRequestHandler<TRequest, TResponse>
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse)
- uid: Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync(`0)
  name: HandleAsync(TRequest)
  href: api/Raftel.Application.Abstractions.IRequestHandler-2.html#Raftel_Application_Abstractions_IRequestHandler_2_HandleAsync__0_
  commentId: M:Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync(`0)
  fullName: Raftel.Application.Abstractions.IRequestHandler<TRequest, TResponse>.HandleAsync(TRequest)
  fullName.vb: Raftel.Application.Abstractions.IRequestHandler(Of TRequest, TResponse).HandleAsync(TRequest)
  nameWithType: IRequestHandler<TRequest, TResponse>.HandleAsync(TRequest)
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).HandleAsync(TRequest)
- uid: Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync*
  name: HandleAsync
  href: api/Raftel.Application.Abstractions.IRequestHandler-2.html#Raftel_Application_Abstractions_IRequestHandler_2_HandleAsync_
  commentId: Overload:Raftel.Application.Abstractions.IRequestHandler`2.HandleAsync
  isSpec: "True"
  fullName: Raftel.Application.Abstractions.IRequestHandler<TRequest, TResponse>.HandleAsync
  fullName.vb: Raftel.Application.Abstractions.IRequestHandler(Of TRequest, TResponse).HandleAsync
  nameWithType: IRequestHandler<TRequest, TResponse>.HandleAsync
  nameWithType.vb: IRequestHandler(Of TRequest, TResponse).HandleAsync
- uid: Raftel.Application.Abstractions.IRequestMiddleware`2
  name: IRequestMiddleware<TRequest, TResponse>
  href: api/Raftel.Application.Abstractions.IRequestMiddleware-2.html
  commentId: T:Raftel.Application.Abstractions.IRequestMiddleware`2
  name.vb: IRequestMiddleware(Of TRequest, TResponse)
  fullName: Raftel.Application.Abstractions.IRequestMiddleware<TRequest, TResponse>
  fullName.vb: Raftel.Application.Abstractions.IRequestMiddleware(Of TRequest, TResponse)
  nameWithType: IRequestMiddleware<TRequest, TResponse>
  nameWithType.vb: IRequestMiddleware(Of TRequest, TResponse)
- uid: Raftel.Application.Abstractions.IRequestMiddleware`2.HandleAsync(`0,Raftel.Application.Abstractions.RequestHandlerDelegate{`1})
  name: HandleAsync(TRequest, RequestHandlerDelegate<TResponse>)
  href: api/Raftel.Application.Abstractions.IRequestMiddleware-2.html#Raftel_Application_Abstractions_IRequestMiddleware_2_HandleAsync__0_Raftel_Application_Abstractions_RequestHandlerDelegate__1__
  commentId: M:Raftel.Application.Abstractions.IRequestMiddleware`2.HandleAsync(`0,Raftel.Application.Abstractions.RequestHandlerDelegate{`1})
  name.vb: HandleAsync(TRequest, RequestHandlerDelegate(Of TResponse))
  fullName: Raftel.Application.Abstractions.IRequestMiddleware<TRequest, TResponse>.HandleAsync(TRequest, Raftel.Application.Abstractions.RequestHandlerDelegate<TResponse>)
  fullName.vb: Raftel.Application.Abstractions.IRequestMiddleware(Of TRequest, TResponse).HandleAsync(TRequest, Raftel.Application.Abstractions.RequestHandlerDelegate(Of TResponse))
  nameWithType: IRequestMiddleware<TRequest, TResponse>.HandleAsync(TRequest, RequestHandlerDelegate<TResponse>)
  nameWithType.vb: IRequestMiddleware(Of TRequest, TResponse).HandleAsync(TRequest, RequestHandlerDelegate(Of TResponse))
- uid: Raftel.Application.Abstractions.IRequestMiddleware`2.HandleAsync*
  name: HandleAsync
  href: api/Raftel.Application.Abstractions.IRequestMiddleware-2.html#Raftel_Application_Abstractions_IRequestMiddleware_2_HandleAsync_
  commentId: Overload:Raftel.Application.Abstractions.IRequestMiddleware`2.HandleAsync
  isSpec: "True"
  fullName: Raftel.Application.Abstractions.IRequestMiddleware<TRequest, TResponse>.HandleAsync
  fullName.vb: Raftel.Application.Abstractions.IRequestMiddleware(Of TRequest, TResponse).HandleAsync
  nameWithType: IRequestMiddleware<TRequest, TResponse>.HandleAsync
  nameWithType.vb: IRequestMiddleware(Of TRequest, TResponse).HandleAsync
- uid: Raftel.Application.Abstractions.IRequest`1
  name: IRequest<TResponse>
  href: api/Raftel.Application.Abstractions.IRequest-1.html
  commentId: T:Raftel.Application.Abstractions.IRequest`1
  name.vb: IRequest(Of TResponse)
  fullName: Raftel.Application.Abstractions.IRequest<TResponse>
  fullName.vb: Raftel.Application.Abstractions.IRequest(Of TResponse)
  nameWithType: IRequest<TResponse>
  nameWithType.vb: IRequest(Of TResponse)
- uid: Raftel.Application.Abstractions.RequestDispatcher
  name: RequestDispatcher
  href: api/Raftel.Application.Abstractions.RequestDispatcher.html
  commentId: T:Raftel.Application.Abstractions.RequestDispatcher
  fullName: Raftel.Application.Abstractions.RequestDispatcher
  nameWithType: RequestDispatcher
- uid: Raftel.Application.Abstractions.RequestDispatcher.#ctor(System.IServiceProvider)
  name: RequestDispatcher(IServiceProvider)
  href: api/Raftel.Application.Abstractions.RequestDispatcher.html#Raftel_Application_Abstractions_RequestDispatcher__ctor_System_IServiceProvider_
  commentId: M:Raftel.Application.Abstractions.RequestDispatcher.#ctor(System.IServiceProvider)
  name.vb: New(IServiceProvider)
  fullName: Raftel.Application.Abstractions.RequestDispatcher.RequestDispatcher(System.IServiceProvider)
  fullName.vb: Raftel.Application.Abstractions.RequestDispatcher.New(System.IServiceProvider)
  nameWithType: RequestDispatcher.RequestDispatcher(IServiceProvider)
  nameWithType.vb: RequestDispatcher.New(IServiceProvider)
- uid: Raftel.Application.Abstractions.RequestDispatcher.#ctor*
  name: RequestDispatcher
  href: api/Raftel.Application.Abstractions.RequestDispatcher.html#Raftel_Application_Abstractions_RequestDispatcher__ctor_
  commentId: Overload:Raftel.Application.Abstractions.RequestDispatcher.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Application.Abstractions.RequestDispatcher.RequestDispatcher
  fullName.vb: Raftel.Application.Abstractions.RequestDispatcher.New
  nameWithType: RequestDispatcher.RequestDispatcher
  nameWithType.vb: RequestDispatcher.New
- uid: Raftel.Application.Abstractions.RequestDispatcher.DispatchAsync*
  name: DispatchAsync
  href: api/Raftel.Application.Abstractions.RequestDispatcher.html#Raftel_Application_Abstractions_RequestDispatcher_DispatchAsync_
  commentId: Overload:Raftel.Application.Abstractions.RequestDispatcher.DispatchAsync
  isSpec: "True"
  fullName: Raftel.Application.Abstractions.RequestDispatcher.DispatchAsync
  nameWithType: RequestDispatcher.DispatchAsync
- uid: Raftel.Application.Abstractions.RequestDispatcher.DispatchAsync``2(``0)
  name: DispatchAsync<TRequest, TResponse>(TRequest)
  href: api/Raftel.Application.Abstractions.RequestDispatcher.html#Raftel_Application_Abstractions_RequestDispatcher_DispatchAsync__2___0_
  commentId: M:Raftel.Application.Abstractions.RequestDispatcher.DispatchAsync``2(``0)
  name.vb: DispatchAsync(Of TRequest, TResponse)(TRequest)
  fullName: Raftel.Application.Abstractions.RequestDispatcher.DispatchAsync<TRequest, TResponse>(TRequest)
  fullName.vb: Raftel.Application.Abstractions.RequestDispatcher.DispatchAsync(Of TRequest, TResponse)(TRequest)
  nameWithType: RequestDispatcher.DispatchAsync<TRequest, TResponse>(TRequest)
  nameWithType.vb: RequestDispatcher.DispatchAsync(Of TRequest, TResponse)(TRequest)
- uid: Raftel.Application.Abstractions.RequestHandlerDelegate`1
  name: RequestHandlerDelegate<TResponse>
  href: api/Raftel.Application.Abstractions.RequestHandlerDelegate-1.html
  commentId: T:Raftel.Application.Abstractions.RequestHandlerDelegate`1
  name.vb: RequestHandlerDelegate(Of TResponse)
  fullName: Raftel.Application.Abstractions.RequestHandlerDelegate<TResponse>
  fullName.vb: Raftel.Application.Abstractions.RequestHandlerDelegate(Of TResponse)
  nameWithType: RequestHandlerDelegate<TResponse>
  nameWithType.vb: RequestHandlerDelegate(Of TResponse)
- uid: Raftel.Application.Commands
  name: Raftel.Application.Commands
  href: api/Raftel.Application.Commands.html
  commentId: N:Raftel.Application.Commands
  fullName: Raftel.Application.Commands
  nameWithType: Raftel.Application.Commands
- uid: Raftel.Application.Commands.CommandDispatcher
  name: CommandDispatcher
  href: api/Raftel.Application.Commands.CommandDispatcher.html
  commentId: T:Raftel.Application.Commands.CommandDispatcher
  fullName: Raftel.Application.Commands.CommandDispatcher
  nameWithType: CommandDispatcher
- uid: Raftel.Application.Commands.CommandDispatcher.#ctor(Raftel.Application.Abstractions.IRequestDispatcher)
  name: CommandDispatcher(IRequestDispatcher)
  href: api/Raftel.Application.Commands.CommandDispatcher.html#Raftel_Application_Commands_CommandDispatcher__ctor_Raftel_Application_Abstractions_IRequestDispatcher_
  commentId: M:Raftel.Application.Commands.CommandDispatcher.#ctor(Raftel.Application.Abstractions.IRequestDispatcher)
  name.vb: New(IRequestDispatcher)
  fullName: Raftel.Application.Commands.CommandDispatcher.CommandDispatcher(Raftel.Application.Abstractions.IRequestDispatcher)
  fullName.vb: Raftel.Application.Commands.CommandDispatcher.New(Raftel.Application.Abstractions.IRequestDispatcher)
  nameWithType: CommandDispatcher.CommandDispatcher(IRequestDispatcher)
  nameWithType.vb: CommandDispatcher.New(IRequestDispatcher)
- uid: Raftel.Application.Commands.CommandDispatcher.#ctor*
  name: CommandDispatcher
  href: api/Raftel.Application.Commands.CommandDispatcher.html#Raftel_Application_Commands_CommandDispatcher__ctor_
  commentId: Overload:Raftel.Application.Commands.CommandDispatcher.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Application.Commands.CommandDispatcher.CommandDispatcher
  fullName.vb: Raftel.Application.Commands.CommandDispatcher.New
  nameWithType: CommandDispatcher.CommandDispatcher
  nameWithType.vb: CommandDispatcher.New
- uid: Raftel.Application.Commands.CommandDispatcher.DispatchAsync*
  name: DispatchAsync
  href: api/Raftel.Application.Commands.CommandDispatcher.html#Raftel_Application_Commands_CommandDispatcher_DispatchAsync_
  commentId: Overload:Raftel.Application.Commands.CommandDispatcher.DispatchAsync
  isSpec: "True"
  fullName: Raftel.Application.Commands.CommandDispatcher.DispatchAsync
  nameWithType: CommandDispatcher.DispatchAsync
- uid: Raftel.Application.Commands.CommandDispatcher.DispatchAsync``1(``0)
  name: DispatchAsync<TCommand>(TCommand)
  href: api/Raftel.Application.Commands.CommandDispatcher.html#Raftel_Application_Commands_CommandDispatcher_DispatchAsync__1___0_
  commentId: M:Raftel.Application.Commands.CommandDispatcher.DispatchAsync``1(``0)
  name.vb: DispatchAsync(Of TCommand)(TCommand)
  fullName: Raftel.Application.Commands.CommandDispatcher.DispatchAsync<TCommand>(TCommand)
  fullName.vb: Raftel.Application.Commands.CommandDispatcher.DispatchAsync(Of TCommand)(TCommand)
  nameWithType: CommandDispatcher.DispatchAsync<TCommand>(TCommand)
  nameWithType.vb: CommandDispatcher.DispatchAsync(Of TCommand)(TCommand)
- uid: Raftel.Application.Commands.ICommand
  name: ICommand
  href: api/Raftel.Application.Commands.ICommand.html
  commentId: T:Raftel.Application.Commands.ICommand
  fullName: Raftel.Application.Commands.ICommand
  nameWithType: ICommand
- uid: Raftel.Application.Commands.ICommandDispatcher
  name: ICommandDispatcher
  href: api/Raftel.Application.Commands.ICommandDispatcher.html
  commentId: T:Raftel.Application.Commands.ICommandDispatcher
  fullName: Raftel.Application.Commands.ICommandDispatcher
  nameWithType: ICommandDispatcher
- uid: Raftel.Application.Commands.ICommandDispatcher.DispatchAsync*
  name: DispatchAsync
  href: api/Raftel.Application.Commands.ICommandDispatcher.html#Raftel_Application_Commands_ICommandDispatcher_DispatchAsync_
  commentId: Overload:Raftel.Application.Commands.ICommandDispatcher.DispatchAsync
  isSpec: "True"
  fullName: Raftel.Application.Commands.ICommandDispatcher.DispatchAsync
  nameWithType: ICommandDispatcher.DispatchAsync
- uid: Raftel.Application.Commands.ICommandDispatcher.DispatchAsync``1(``0)
  name: DispatchAsync<TCommand>(TCommand)
  href: api/Raftel.Application.Commands.ICommandDispatcher.html#Raftel_Application_Commands_ICommandDispatcher_DispatchAsync__1___0_
  commentId: M:Raftel.Application.Commands.ICommandDispatcher.DispatchAsync``1(``0)
  name.vb: DispatchAsync(Of TCommand)(TCommand)
  fullName: Raftel.Application.Commands.ICommandDispatcher.DispatchAsync<TCommand>(TCommand)
  fullName.vb: Raftel.Application.Commands.ICommandDispatcher.DispatchAsync(Of TCommand)(TCommand)
  nameWithType: ICommandDispatcher.DispatchAsync<TCommand>(TCommand)
  nameWithType.vb: ICommandDispatcher.DispatchAsync(Of TCommand)(TCommand)
- uid: Raftel.Application.Commands.ICommandHandler`1
  name: ICommandHandler<TCommand>
  href: api/Raftel.Application.Commands.ICommandHandler-1.html
  commentId: T:Raftel.Application.Commands.ICommandHandler`1
  name.vb: ICommandHandler(Of TCommand)
  fullName: Raftel.Application.Commands.ICommandHandler<TCommand>
  fullName.vb: Raftel.Application.Commands.ICommandHandler(Of TCommand)
  nameWithType: ICommandHandler<TCommand>
  nameWithType.vb: ICommandHandler(Of TCommand)
- uid: Raftel.Application.Queries
  name: Raftel.Application.Queries
  href: api/Raftel.Application.Queries.html
  commentId: N:Raftel.Application.Queries
  fullName: Raftel.Application.Queries
  nameWithType: Raftel.Application.Queries
- uid: Raftel.Application.Queries.IQueryDispatcher
  name: IQueryDispatcher
  href: api/Raftel.Application.Queries.IQueryDispatcher.html
  commentId: T:Raftel.Application.Queries.IQueryDispatcher
  fullName: Raftel.Application.Queries.IQueryDispatcher
  nameWithType: IQueryDispatcher
- uid: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync*
  name: DispatchAsync
  href: api/Raftel.Application.Queries.IQueryDispatcher.html#Raftel_Application_Queries_IQueryDispatcher_DispatchAsync_
  commentId: Overload:Raftel.Application.Queries.IQueryDispatcher.DispatchAsync
  isSpec: "True"
  fullName: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync
  nameWithType: IQueryDispatcher.DispatchAsync
- uid: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync``2(``0)
  name: DispatchAsync<TQuery, TResult>(TQuery)
  href: api/Raftel.Application.Queries.IQueryDispatcher.html#Raftel_Application_Queries_IQueryDispatcher_DispatchAsync__2___0_
  commentId: M:Raftel.Application.Queries.IQueryDispatcher.DispatchAsync``2(``0)
  name.vb: DispatchAsync(Of TQuery, TResult)(TQuery)
  fullName: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync<TQuery, TResult>(TQuery)
  fullName.vb: Raftel.Application.Queries.IQueryDispatcher.DispatchAsync(Of TQuery, TResult)(TQuery)
  nameWithType: IQueryDispatcher.DispatchAsync<TQuery, TResult>(TQuery)
  nameWithType.vb: IQueryDispatcher.DispatchAsync(Of TQuery, TResult)(TQuery)
- uid: Raftel.Application.Queries.IQueryHandler`2
  name: IQueryHandler<TQuery, TResult>
  href: api/Raftel.Application.Queries.IQueryHandler-2.html
  commentId: T:Raftel.Application.Queries.IQueryHandler`2
  name.vb: IQueryHandler(Of TQuery, TResult)
  fullName: Raftel.Application.Queries.IQueryHandler<TQuery, TResult>
  fullName.vb: Raftel.Application.Queries.IQueryHandler(Of TQuery, TResult)
  nameWithType: IQueryHandler<TQuery, TResult>
  nameWithType.vb: IQueryHandler(Of TQuery, TResult)
- uid: Raftel.Application.Queries.IQuery`1
  name: IQuery<TResult>
  href: api/Raftel.Application.Queries.IQuery-1.html
  commentId: T:Raftel.Application.Queries.IQuery`1
  name.vb: IQuery(Of TResult)
  fullName: Raftel.Application.Queries.IQuery<TResult>
  fullName.vb: Raftel.Application.Queries.IQuery(Of TResult)
  nameWithType: IQuery<TResult>
  nameWithType.vb: IQuery(Of TResult)
- uid: Raftel.Application.Queries.QueryDispatcher
  name: QueryDispatcher
  href: api/Raftel.Application.Queries.QueryDispatcher.html
  commentId: T:Raftel.Application.Queries.QueryDispatcher
  fullName: Raftel.Application.Queries.QueryDispatcher
  nameWithType: QueryDispatcher
- uid: Raftel.Application.Queries.QueryDispatcher.#ctor(Raftel.Application.Abstractions.IRequestDispatcher)
  name: QueryDispatcher(IRequestDispatcher)
  href: api/Raftel.Application.Queries.QueryDispatcher.html#Raftel_Application_Queries_QueryDispatcher__ctor_Raftel_Application_Abstractions_IRequestDispatcher_
  commentId: M:Raftel.Application.Queries.QueryDispatcher.#ctor(Raftel.Application.Abstractions.IRequestDispatcher)
  name.vb: New(IRequestDispatcher)
  fullName: Raftel.Application.Queries.QueryDispatcher.QueryDispatcher(Raftel.Application.Abstractions.IRequestDispatcher)
  fullName.vb: Raftel.Application.Queries.QueryDispatcher.New(Raftel.Application.Abstractions.IRequestDispatcher)
  nameWithType: QueryDispatcher.QueryDispatcher(IRequestDispatcher)
  nameWithType.vb: QueryDispatcher.New(IRequestDispatcher)
- uid: Raftel.Application.Queries.QueryDispatcher.#ctor*
  name: QueryDispatcher
  href: api/Raftel.Application.Queries.QueryDispatcher.html#Raftel_Application_Queries_QueryDispatcher__ctor_
  commentId: Overload:Raftel.Application.Queries.QueryDispatcher.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Application.Queries.QueryDispatcher.QueryDispatcher
  fullName.vb: Raftel.Application.Queries.QueryDispatcher.New
  nameWithType: QueryDispatcher.QueryDispatcher
  nameWithType.vb: QueryDispatcher.New
- uid: Raftel.Application.Queries.QueryDispatcher.DispatchAsync*
  name: DispatchAsync
  href: api/Raftel.Application.Queries.QueryDispatcher.html#Raftel_Application_Queries_QueryDispatcher_DispatchAsync_
  commentId: Overload:Raftel.Application.Queries.QueryDispatcher.DispatchAsync
  isSpec: "True"
  fullName: Raftel.Application.Queries.QueryDispatcher.DispatchAsync
  nameWithType: QueryDispatcher.DispatchAsync
- uid: Raftel.Application.Queries.QueryDispatcher.DispatchAsync``2(``0)
  name: DispatchAsync<TQuery, TResult>(TQuery)
  href: api/Raftel.Application.Queries.QueryDispatcher.html#Raftel_Application_Queries_QueryDispatcher_DispatchAsync__2___0_
  commentId: M:Raftel.Application.Queries.QueryDispatcher.DispatchAsync``2(``0)
  name.vb: DispatchAsync(Of TQuery, TResult)(TQuery)
  fullName: Raftel.Application.Queries.QueryDispatcher.DispatchAsync<TQuery, TResult>(TQuery)
  fullName.vb: Raftel.Application.Queries.QueryDispatcher.DispatchAsync(Of TQuery, TResult)(TQuery)
  nameWithType: QueryDispatcher.DispatchAsync<TQuery, TResult>(TQuery)
  nameWithType.vb: QueryDispatcher.DispatchAsync(Of TQuery, TResult)(TQuery)
- uid: Raftel.Domain.Abstractions
  name: Raftel.Domain.Abstractions
  href: api/Raftel.Domain.Abstractions.html
  commentId: N:Raftel.Domain.Abstractions
  fullName: Raftel.Domain.Abstractions
  nameWithType: Raftel.Domain.Abstractions
- uid: Raftel.Domain.Abstractions.Error
  name: Error
  href: api/Raftel.Domain.Abstractions.Error.html
  commentId: T:Raftel.Domain.Abstractions.Error
  fullName: Raftel.Domain.Abstractions.Error
  nameWithType: Error
- uid: Raftel.Domain.Abstractions.Error.#ctor(System.String,System.String)
  name: Error(string, string)
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error__ctor_System_String_System_String_
  commentId: M:Raftel.Domain.Abstractions.Error.#ctor(System.String,System.String)
  name.vb: New(String, String)
  fullName: Raftel.Domain.Abstractions.Error.Error(string, string)
  fullName.vb: Raftel.Domain.Abstractions.Error.New(String, String)
  nameWithType: Error.Error(string, string)
  nameWithType.vb: Error.New(String, String)
- uid: Raftel.Domain.Abstractions.Error.#ctor*
  name: Error
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error__ctor_
  commentId: Overload:Raftel.Domain.Abstractions.Error.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Domain.Abstractions.Error.Error
  fullName.vb: Raftel.Domain.Abstractions.Error.New
  nameWithType: Error.Error
  nameWithType.vb: Error.New
- uid: Raftel.Domain.Abstractions.Error.Code
  name: Code
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error_Code
  commentId: P:Raftel.Domain.Abstractions.Error.Code
  fullName: Raftel.Domain.Abstractions.Error.Code
  nameWithType: Error.Code
- uid: Raftel.Domain.Abstractions.Error.Code*
  name: Code
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error_Code_
  commentId: Overload:Raftel.Domain.Abstractions.Error.Code
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Error.Code
  nameWithType: Error.Code
- uid: Raftel.Domain.Abstractions.Error.Message
  name: Message
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error_Message
  commentId: P:Raftel.Domain.Abstractions.Error.Message
  fullName: Raftel.Domain.Abstractions.Error.Message
  nameWithType: Error.Message
- uid: Raftel.Domain.Abstractions.Error.Message*
  name: Message
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error_Message_
  commentId: Overload:Raftel.Domain.Abstractions.Error.Message
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Error.Message
  nameWithType: Error.Message
- uid: Raftel.Domain.Abstractions.Error.None
  name: None
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error_None
  commentId: F:Raftel.Domain.Abstractions.Error.None
  fullName: Raftel.Domain.Abstractions.Error.None
  nameWithType: Error.None
- uid: Raftel.Domain.Abstractions.Error.NullValue
  name: NullValue
  href: api/Raftel.Domain.Abstractions.Error.html#Raftel_Domain_Abstractions_Error_NullValue
  commentId: F:Raftel.Domain.Abstractions.Error.NullValue
  fullName: Raftel.Domain.Abstractions.Error.NullValue
  nameWithType: Error.NullValue
- uid: Raftel.Domain.Abstractions.Result
  name: Result
  href: api/Raftel.Domain.Abstractions.Result.html
  commentId: T:Raftel.Domain.Abstractions.Result
  fullName: Raftel.Domain.Abstractions.Result
  nameWithType: Result
- uid: Raftel.Domain.Abstractions.Result.#ctor(System.Boolean,Raftel.Domain.Abstractions.Error)
  name: Result(bool, Error)
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result__ctor_System_Boolean_Raftel_Domain_Abstractions_Error_
  commentId: M:Raftel.Domain.Abstractions.Result.#ctor(System.Boolean,Raftel.Domain.Abstractions.Error)
  name.vb: New(Boolean, Error)
  fullName: Raftel.Domain.Abstractions.Result.Result(bool, Raftel.Domain.Abstractions.Error)
  fullName.vb: Raftel.Domain.Abstractions.Result.New(Boolean, Raftel.Domain.Abstractions.Error)
  nameWithType: Result.Result(bool, Error)
  nameWithType.vb: Result.New(Boolean, Error)
- uid: Raftel.Domain.Abstractions.Result.#ctor*
  name: Result
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result__ctor_
  commentId: Overload:Raftel.Domain.Abstractions.Result.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Domain.Abstractions.Result.Result
  fullName.vb: Raftel.Domain.Abstractions.Result.New
  nameWithType: Result.Result
  nameWithType.vb: Result.New
- uid: Raftel.Domain.Abstractions.Result.Create*
  name: Create
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Create_
  commentId: Overload:Raftel.Domain.Abstractions.Result.Create
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result.Create
  nameWithType: Result.Create
- uid: Raftel.Domain.Abstractions.Result.Create``1(``0)
  name: Create<TValue>(TValue?)
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Create__1___0_
  commentId: M:Raftel.Domain.Abstractions.Result.Create``1(``0)
  name.vb: Create(Of TValue)(TValue)
  fullName: Raftel.Domain.Abstractions.Result.Create<TValue>(TValue?)
  fullName.vb: Raftel.Domain.Abstractions.Result.Create(Of TValue)(TValue)
  nameWithType: Result.Create<TValue>(TValue?)
  nameWithType.vb: Result.Create(Of TValue)(TValue)
- uid: Raftel.Domain.Abstractions.Result.Error
  name: Error
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Error
  commentId: P:Raftel.Domain.Abstractions.Result.Error
  fullName: Raftel.Domain.Abstractions.Result.Error
  nameWithType: Result.Error
- uid: Raftel.Domain.Abstractions.Result.Error*
  name: Error
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Error_
  commentId: Overload:Raftel.Domain.Abstractions.Result.Error
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result.Error
  nameWithType: Result.Error
- uid: Raftel.Domain.Abstractions.Result.Failure(Raftel.Domain.Abstractions.Error)
  name: Failure(Error)
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Failure_Raftel_Domain_Abstractions_Error_
  commentId: M:Raftel.Domain.Abstractions.Result.Failure(Raftel.Domain.Abstractions.Error)
  fullName: Raftel.Domain.Abstractions.Result.Failure(Raftel.Domain.Abstractions.Error)
  nameWithType: Result.Failure(Error)
- uid: Raftel.Domain.Abstractions.Result.Failure*
  name: Failure
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Failure_
  commentId: Overload:Raftel.Domain.Abstractions.Result.Failure
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result.Failure
  nameWithType: Result.Failure
- uid: Raftel.Domain.Abstractions.Result.Failure``1(Raftel.Domain.Abstractions.Error)
  name: Failure<TValue>(Error)
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Failure__1_Raftel_Domain_Abstractions_Error_
  commentId: M:Raftel.Domain.Abstractions.Result.Failure``1(Raftel.Domain.Abstractions.Error)
  name.vb: Failure(Of TValue)(Error)
  fullName: Raftel.Domain.Abstractions.Result.Failure<TValue>(Raftel.Domain.Abstractions.Error)
  fullName.vb: Raftel.Domain.Abstractions.Result.Failure(Of TValue)(Raftel.Domain.Abstractions.Error)
  nameWithType: Result.Failure<TValue>(Error)
  nameWithType.vb: Result.Failure(Of TValue)(Error)
- uid: Raftel.Domain.Abstractions.Result.IsFailure
  name: IsFailure
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_IsFailure
  commentId: P:Raftel.Domain.Abstractions.Result.IsFailure
  fullName: Raftel.Domain.Abstractions.Result.IsFailure
  nameWithType: Result.IsFailure
- uid: Raftel.Domain.Abstractions.Result.IsFailure*
  name: IsFailure
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_IsFailure_
  commentId: Overload:Raftel.Domain.Abstractions.Result.IsFailure
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result.IsFailure
  nameWithType: Result.IsFailure
- uid: Raftel.Domain.Abstractions.Result.IsSuccess
  name: IsSuccess
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_IsSuccess
  commentId: P:Raftel.Domain.Abstractions.Result.IsSuccess
  fullName: Raftel.Domain.Abstractions.Result.IsSuccess
  nameWithType: Result.IsSuccess
- uid: Raftel.Domain.Abstractions.Result.IsSuccess*
  name: IsSuccess
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_IsSuccess_
  commentId: Overload:Raftel.Domain.Abstractions.Result.IsSuccess
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result.IsSuccess
  nameWithType: Result.IsSuccess
- uid: Raftel.Domain.Abstractions.Result.Success
  name: Success()
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Success
  commentId: M:Raftel.Domain.Abstractions.Result.Success
  fullName: Raftel.Domain.Abstractions.Result.Success()
  nameWithType: Result.Success()
- uid: Raftel.Domain.Abstractions.Result.Success*
  name: Success
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Success_
  commentId: Overload:Raftel.Domain.Abstractions.Result.Success
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result.Success
  nameWithType: Result.Success
- uid: Raftel.Domain.Abstractions.Result.Success``1(``0)
  name: Success<TValue>(TValue)
  href: api/Raftel.Domain.Abstractions.Result.html#Raftel_Domain_Abstractions_Result_Success__1___0_
  commentId: M:Raftel.Domain.Abstractions.Result.Success``1(``0)
  name.vb: Success(Of TValue)(TValue)
  fullName: Raftel.Domain.Abstractions.Result.Success<TValue>(TValue)
  fullName.vb: Raftel.Domain.Abstractions.Result.Success(Of TValue)(TValue)
  nameWithType: Result.Success<TValue>(TValue)
  nameWithType.vb: Result.Success(Of TValue)(TValue)
- uid: Raftel.Domain.Abstractions.Result`1
  name: Result<TValue>
  href: api/Raftel.Domain.Abstractions.Result-1.html
  commentId: T:Raftel.Domain.Abstractions.Result`1
  name.vb: Result(Of TValue)
  fullName: Raftel.Domain.Abstractions.Result<TValue>
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue)
  nameWithType: Result<TValue>
  nameWithType.vb: Result(Of TValue)
- uid: Raftel.Domain.Abstractions.Result`1.#ctor(`0,System.Boolean,Raftel.Domain.Abstractions.Error)
  name: Result(TValue, bool, Error)
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1__ctor__0_System_Boolean_Raftel_Domain_Abstractions_Error_
  commentId: M:Raftel.Domain.Abstractions.Result`1.#ctor(`0,System.Boolean,Raftel.Domain.Abstractions.Error)
  name.vb: New(TValue, Boolean, Error)
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Result(TValue, bool, Raftel.Domain.Abstractions.Error)
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).New(TValue, Boolean, Raftel.Domain.Abstractions.Error)
  nameWithType: Result<TValue>.Result(TValue, bool, Error)
  nameWithType.vb: Result(Of TValue).New(TValue, Boolean, Error)
- uid: Raftel.Domain.Abstractions.Result`1.#ctor*
  name: Result
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1__ctor_
  commentId: Overload:Raftel.Domain.Abstractions.Result`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Result
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).New
  nameWithType: Result<TValue>.Result
  nameWithType.vb: Result(Of TValue).New
- uid: Raftel.Domain.Abstractions.Result`1.Failure(Raftel.Domain.Abstractions.Error)
  name: Failure(Error)
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_Failure_Raftel_Domain_Abstractions_Error_
  commentId: M:Raftel.Domain.Abstractions.Result`1.Failure(Raftel.Domain.Abstractions.Error)
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Failure(Raftel.Domain.Abstractions.Error)
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).Failure(Raftel.Domain.Abstractions.Error)
  nameWithType: Result<TValue>.Failure(Error)
  nameWithType.vb: Result(Of TValue).Failure(Error)
- uid: Raftel.Domain.Abstractions.Result`1.Failure*
  name: Failure
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_Failure_
  commentId: Overload:Raftel.Domain.Abstractions.Result`1.Failure
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Failure
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).Failure
  nameWithType: Result<TValue>.Failure
  nameWithType.vb: Result(Of TValue).Failure
- uid: Raftel.Domain.Abstractions.Result`1.Success(`0)
  name: Success(TValue)
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_Success__0_
  commentId: M:Raftel.Domain.Abstractions.Result`1.Success(`0)
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Success(TValue)
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).Success(TValue)
  nameWithType: Result<TValue>.Success(TValue)
  nameWithType.vb: Result(Of TValue).Success(TValue)
- uid: Raftel.Domain.Abstractions.Result`1.Success*
  name: Success
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_Success_
  commentId: Overload:Raftel.Domain.Abstractions.Result`1.Success
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Success
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).Success
  nameWithType: Result<TValue>.Success
  nameWithType.vb: Result(Of TValue).Success
- uid: Raftel.Domain.Abstractions.Result`1.Value
  name: Value
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_Value
  commentId: P:Raftel.Domain.Abstractions.Result`1.Value
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Value
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).Value
  nameWithType: Result<TValue>.Value
  nameWithType.vb: Result(Of TValue).Value
- uid: Raftel.Domain.Abstractions.Result`1.Value*
  name: Value
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_Value_
  commentId: Overload:Raftel.Domain.Abstractions.Result`1.Value
  isSpec: "True"
  fullName: Raftel.Domain.Abstractions.Result<TValue>.Value
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).Value
  nameWithType: Result<TValue>.Value
  nameWithType.vb: Result(Of TValue).Value
- uid: Raftel.Domain.Abstractions.Result`1.op_Implicit(`0)~Raftel.Domain.Abstractions.Result{`0}
  name: implicit operator Result<TValue>(TValue)
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_op_Implicit__0__Raftel_Domain_Abstractions_Result__0_
  commentId: M:Raftel.Domain.Abstractions.Result`1.op_Implicit(`0)~Raftel.Domain.Abstractions.Result{`0}
  name.vb: CType(TValue)
  fullName: Raftel.Domain.Abstractions.Result<TValue>.implicit operator Raftel.Domain.Abstractions.Result<TValue>(TValue)
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).CType(TValue)
  nameWithType: Result<TValue>.implicit operator Result<TValue>(TValue)
  nameWithType.vb: Result(Of TValue).CType(TValue)
- uid: Raftel.Domain.Abstractions.Result`1.op_Implicit*
  name: implicit operator
  href: api/Raftel.Domain.Abstractions.Result-1.html#Raftel_Domain_Abstractions_Result_1_op_Implicit_
  commentId: Overload:Raftel.Domain.Abstractions.Result`1.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Raftel.Domain.Abstractions.Result<TValue>.implicit operator
  fullName.vb: Raftel.Domain.Abstractions.Result(Of TValue).CType
  nameWithType: Result<TValue>.implicit operator
  nameWithType.vb: Result(Of TValue).CType
- uid: Raftel.Domain.BaseTypes
  name: Raftel.Domain.BaseTypes
  href: api/Raftel.Domain.BaseTypes.html
  commentId: N:Raftel.Domain.BaseTypes
  fullName: Raftel.Domain.BaseTypes
  nameWithType: Raftel.Domain.BaseTypes
- uid: Raftel.Domain.BaseTypes.AggregateRoot`1
  name: AggregateRoot<TId>
  href: api/Raftel.Domain.BaseTypes.AggregateRoot-1.html
  commentId: T:Raftel.Domain.BaseTypes.AggregateRoot`1
  name.vb: AggregateRoot(Of TId)
  fullName: Raftel.Domain.BaseTypes.AggregateRoot<TId>
  fullName.vb: Raftel.Domain.BaseTypes.AggregateRoot(Of TId)
  nameWithType: AggregateRoot<TId>
  nameWithType.vb: AggregateRoot(Of TId)
- uid: Raftel.Domain.BaseTypes.AggregateRoot`1.#ctor(`0)
  name: AggregateRoot(TId)
  href: api/Raftel.Domain.BaseTypes.AggregateRoot-1.html#Raftel_Domain_BaseTypes_AggregateRoot_1__ctor__0_
  commentId: M:Raftel.Domain.BaseTypes.AggregateRoot`1.#ctor(`0)
  name.vb: New(TId)
  fullName: Raftel.Domain.BaseTypes.AggregateRoot<TId>.AggregateRoot(TId)
  fullName.vb: Raftel.Domain.BaseTypes.AggregateRoot(Of TId).New(TId)
  nameWithType: AggregateRoot<TId>.AggregateRoot(TId)
  nameWithType.vb: AggregateRoot(Of TId).New(TId)
- uid: Raftel.Domain.BaseTypes.AggregateRoot`1.#ctor*
  name: AggregateRoot
  href: api/Raftel.Domain.BaseTypes.AggregateRoot-1.html#Raftel_Domain_BaseTypes_AggregateRoot_1__ctor_
  commentId: Overload:Raftel.Domain.BaseTypes.AggregateRoot`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Domain.BaseTypes.AggregateRoot<TId>.AggregateRoot
  fullName.vb: Raftel.Domain.BaseTypes.AggregateRoot(Of TId).New
  nameWithType: AggregateRoot<TId>.AggregateRoot
  nameWithType.vb: AggregateRoot(Of TId).New
- uid: Raftel.Domain.BaseTypes.Entity`1
  name: Entity<TId>
  href: api/Raftel.Domain.BaseTypes.Entity-1.html
  commentId: T:Raftel.Domain.BaseTypes.Entity`1
  name.vb: Entity(Of TId)
  fullName: Raftel.Domain.BaseTypes.Entity<TId>
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId)
  nameWithType: Entity<TId>
  nameWithType.vb: Entity(Of TId)
- uid: Raftel.Domain.BaseTypes.Entity`1.#ctor(`0)
  name: Entity(TId)
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1__ctor__0_
  commentId: M:Raftel.Domain.BaseTypes.Entity`1.#ctor(`0)
  name.vb: New(TId)
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.Entity(TId)
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).New(TId)
  nameWithType: Entity<TId>.Entity(TId)
  nameWithType.vb: Entity(Of TId).New(TId)
- uid: Raftel.Domain.BaseTypes.Entity`1.#ctor*
  name: Entity
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1__ctor_
  commentId: Overload:Raftel.Domain.BaseTypes.Entity`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.Entity
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).New
  nameWithType: Entity<TId>.Entity
  nameWithType.vb: Entity(Of TId).New
- uid: Raftel.Domain.BaseTypes.Entity`1.Equals(System.Object)
  name: Equals(object?)
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1_Equals_System_Object_
  commentId: M:Raftel.Domain.BaseTypes.Entity`1.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.Equals(object?)
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).Equals(Object)
  nameWithType: Entity<TId>.Equals(object?)
  nameWithType.vb: Entity(Of TId).Equals(Object)
- uid: Raftel.Domain.BaseTypes.Entity`1.Equals*
  name: Equals
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1_Equals_
  commentId: Overload:Raftel.Domain.BaseTypes.Entity`1.Equals
  isSpec: "True"
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.Equals
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).Equals
  nameWithType: Entity<TId>.Equals
  nameWithType.vb: Entity(Of TId).Equals
- uid: Raftel.Domain.BaseTypes.Entity`1.GetHashCode
  name: GetHashCode()
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1_GetHashCode
  commentId: M:Raftel.Domain.BaseTypes.Entity`1.GetHashCode
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.GetHashCode()
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).GetHashCode()
  nameWithType: Entity<TId>.GetHashCode()
  nameWithType.vb: Entity(Of TId).GetHashCode()
- uid: Raftel.Domain.BaseTypes.Entity`1.GetHashCode*
  name: GetHashCode
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1_GetHashCode_
  commentId: Overload:Raftel.Domain.BaseTypes.Entity`1.GetHashCode
  isSpec: "True"
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.GetHashCode
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).GetHashCode
  nameWithType: Entity<TId>.GetHashCode
  nameWithType.vb: Entity(Of TId).GetHashCode
- uid: Raftel.Domain.BaseTypes.Entity`1.Id
  name: Id
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1_Id
  commentId: P:Raftel.Domain.BaseTypes.Entity`1.Id
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.Id
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).Id
  nameWithType: Entity<TId>.Id
  nameWithType.vb: Entity(Of TId).Id
- uid: Raftel.Domain.BaseTypes.Entity`1.Id*
  name: Id
  href: api/Raftel.Domain.BaseTypes.Entity-1.html#Raftel_Domain_BaseTypes_Entity_1_Id_
  commentId: Overload:Raftel.Domain.BaseTypes.Entity`1.Id
  isSpec: "True"
  fullName: Raftel.Domain.BaseTypes.Entity<TId>.Id
  fullName.vb: Raftel.Domain.BaseTypes.Entity(Of TId).Id
  nameWithType: Entity<TId>.Id
  nameWithType.vb: Entity(Of TId).Id
- uid: Raftel.Domain.BaseTypes.TypedGuidId
  name: TypedGuidId
  href: api/Raftel.Domain.BaseTypes.TypedGuidId.html
  commentId: T:Raftel.Domain.BaseTypes.TypedGuidId
  fullName: Raftel.Domain.BaseTypes.TypedGuidId
  nameWithType: TypedGuidId
- uid: Raftel.Domain.BaseTypes.TypedGuidId.#ctor(System.Guid)
  name: TypedGuidId(Guid)
  href: api/Raftel.Domain.BaseTypes.TypedGuidId.html#Raftel_Domain_BaseTypes_TypedGuidId__ctor_System_Guid_
  commentId: M:Raftel.Domain.BaseTypes.TypedGuidId.#ctor(System.Guid)
  name.vb: New(Guid)
  fullName: Raftel.Domain.BaseTypes.TypedGuidId.TypedGuidId(System.Guid)
  fullName.vb: Raftel.Domain.BaseTypes.TypedGuidId.New(System.Guid)
  nameWithType: TypedGuidId.TypedGuidId(Guid)
  nameWithType.vb: TypedGuidId.New(Guid)
- uid: Raftel.Domain.BaseTypes.TypedGuidId.#ctor*
  name: TypedGuidId
  href: api/Raftel.Domain.BaseTypes.TypedGuidId.html#Raftel_Domain_BaseTypes_TypedGuidId__ctor_
  commentId: Overload:Raftel.Domain.BaseTypes.TypedGuidId.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Domain.BaseTypes.TypedGuidId.TypedGuidId
  fullName.vb: Raftel.Domain.BaseTypes.TypedGuidId.New
  nameWithType: TypedGuidId.TypedGuidId
  nameWithType.vb: TypedGuidId.New
- uid: Raftel.Domain.BaseTypes.TypedGuidId.NewGuid
  name: NewGuid()
  href: api/Raftel.Domain.BaseTypes.TypedGuidId.html#Raftel_Domain_BaseTypes_TypedGuidId_NewGuid
  commentId: M:Raftel.Domain.BaseTypes.TypedGuidId.NewGuid
  fullName: Raftel.Domain.BaseTypes.TypedGuidId.NewGuid()
  nameWithType: TypedGuidId.NewGuid()
- uid: Raftel.Domain.BaseTypes.TypedGuidId.NewGuid*
  name: NewGuid
  href: api/Raftel.Domain.BaseTypes.TypedGuidId.html#Raftel_Domain_BaseTypes_TypedGuidId_NewGuid_
  commentId: Overload:Raftel.Domain.BaseTypes.TypedGuidId.NewGuid
  isSpec: "True"
  fullName: Raftel.Domain.BaseTypes.TypedGuidId.NewGuid
  nameWithType: TypedGuidId.NewGuid
- uid: Raftel.Domain.BaseTypes.TypedId`1
  name: TypedId<T>
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html
  commentId: T:Raftel.Domain.BaseTypes.TypedId`1
  name.vb: TypedId(Of T)
  fullName: Raftel.Domain.BaseTypes.TypedId<T>
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T)
  nameWithType: TypedId<T>
  nameWithType.vb: TypedId(Of T)
- uid: Raftel.Domain.BaseTypes.TypedId`1.#ctor(`0)
  name: TypedId(T)
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1__ctor__0_
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.#ctor(`0)
  name.vb: New(T)
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.TypedId(T)
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).New(T)
  nameWithType: TypedId<T>.TypedId(T)
  nameWithType.vb: TypedId(Of T).New(T)
- uid: Raftel.Domain.BaseTypes.TypedId`1.#ctor*
  name: TypedId
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1__ctor_
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.TypedId
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).New
  nameWithType: TypedId<T>.TypedId
  nameWithType.vb: TypedId(Of T).New
- uid: Raftel.Domain.BaseTypes.TypedId`1.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
  name: Equals(TypedId<T>?)
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_Equals_Raftel_Domain_BaseTypes_TypedId__0__
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.Equals(Raftel.Domain.BaseTypes.TypedId{`0})
  name.vb: Equals(TypedId(Of T))
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.Equals(Raftel.Domain.BaseTypes.TypedId<T>?)
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).Equals(Raftel.Domain.BaseTypes.TypedId(Of T))
  nameWithType: TypedId<T>.Equals(TypedId<T>?)
  nameWithType.vb: TypedId(Of T).Equals(TypedId(Of T))
- uid: Raftel.Domain.BaseTypes.TypedId`1.Equals*
  name: Equals
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_Equals_
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.Equals
  isSpec: "True"
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.Equals
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).Equals
  nameWithType: TypedId<T>.Equals
  nameWithType.vb: TypedId(Of T).Equals
- uid: Raftel.Domain.BaseTypes.TypedId`1.GetHashCode
  name: GetHashCode()
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_GetHashCode
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.GetHashCode
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.GetHashCode()
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).GetHashCode()
  nameWithType: TypedId<T>.GetHashCode()
  nameWithType.vb: TypedId(Of T).GetHashCode()
- uid: Raftel.Domain.BaseTypes.TypedId`1.GetHashCode*
  name: GetHashCode
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_GetHashCode_
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.GetHashCode
  isSpec: "True"
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.GetHashCode
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).GetHashCode
  nameWithType: TypedId<T>.GetHashCode
  nameWithType.vb: TypedId(Of T).GetHashCode
- uid: Raftel.Domain.BaseTypes.TypedId`1.ToString
  name: ToString()
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_ToString
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.ToString
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.ToString()
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).ToString()
  nameWithType: TypedId<T>.ToString()
  nameWithType.vb: TypedId(Of T).ToString()
- uid: Raftel.Domain.BaseTypes.TypedId`1.ToString*
  name: ToString
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_ToString_
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.ToString
  isSpec: "True"
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.ToString
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).ToString
  nameWithType: TypedId<T>.ToString
  nameWithType.vb: TypedId(Of T).ToString
- uid: Raftel.Domain.BaseTypes.TypedId`1.op_Implicit(Raftel.Domain.BaseTypes.TypedId{`0})~`0
  name: implicit operator T(TypedId<T>)
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_op_Implicit_Raftel_Domain_BaseTypes_TypedId__0____0
  commentId: M:Raftel.Domain.BaseTypes.TypedId`1.op_Implicit(Raftel.Domain.BaseTypes.TypedId{`0})~`0
  name.vb: CType(TypedId(Of T))
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.implicit operator T(Raftel.Domain.BaseTypes.TypedId<T>)
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).CType(Raftel.Domain.BaseTypes.TypedId(Of T))
  nameWithType: TypedId<T>.implicit operator T(TypedId<T>)
  nameWithType.vb: TypedId(Of T).CType(TypedId(Of T))
- uid: Raftel.Domain.BaseTypes.TypedId`1.op_Implicit*
  name: implicit operator
  href: api/Raftel.Domain.BaseTypes.TypedId-1.html#Raftel_Domain_BaseTypes_TypedId_1_op_Implicit_
  commentId: Overload:Raftel.Domain.BaseTypes.TypedId`1.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: Raftel.Domain.BaseTypes.TypedId<T>.implicit operator
  fullName.vb: Raftel.Domain.BaseTypes.TypedId(Of T).CType
  nameWithType: TypedId<T>.implicit operator
  nameWithType.vb: TypedId(Of T).CType
